{"version":3,"sources":["Card/styles.tsx","SubCard/styles.tsx","ComponentContainer/styles.tsx","SubCard/index.tsx","Card/index.tsx","Example.tsx","find-index.ts","index.tsx"],"names":["ExpandableContainer","styled","div","withConfig","displayName","componentId","_ref","isCardOpen","_ref2","ExpandableHeader","p","SubCardContainer","_ref3","SubCardHeader","ComponentContainer","x","Math","floor","random","console","log","randomHeight","SubCardComponent","title","_useState","useState","_useState2","Object","slicedToArray","isSubCardOpen","setIsSubCardOpen","react_default","a","createElement","onClick","e","stopPropagation","onSubCardClick","ExpandableComponent","setIsCardOpen","_useState3","_useState4","src_SubCard","Item","color","setPosition","moveItem","i","isDragging","setDragging","ref","useRef","dragOriginY","useMotionValue","useEffect","height","current","offsetHeight","top","offsetTop","react","framer_motion_es","li","initial","animate","onTop","flat","style","background","whileHover","boxShadow","drag","dragConstraints","bottom","dragElastic","onDragStart","onDragEnd","onDrag","point","y","positionTransition","delta","set","get","Card","Example","initialColors","colors","setColors","positions","offset","dragOffset","targetIndex","yOffset","target","_positions$i","nextItem","undefined","distance","prevItem","prevBottom","clamp","length","findIndex","move","map","Example_Item","key","zIndex","transition","delay","render","Example_Example","document","getElementById"],"mappings":"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","file":"static/js/main.edec8fca.chunk.js","sourcesContent":["import styled from \"styled-components/macro\";\n\ninterface CardProps {\n    isCardOpen: boolean\n}\n\nconst ExpandableContainer = styled.div<CardProps>`\n  min-height: 40px;\n  height: ${({isCardOpen}) => isCardOpen ? 'auto': '40px'};\n  //max-height: ${({isCardOpen}) => isCardOpen ? 'auto': '40px'};\n  box-sizing: border-box;\n  width: 440px;\n  border-radius: 4px;\n  background: ${({isCardOpen}) => isCardOpen ? '#ffc591': '#FFF'};\n  padding: 8px;\n`;\n\nconst ExpandableHeader = styled.p`\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 150%;\n  margin: 0;\n  padding-bottom: 8px;\n`;\n\nconst SubCard = styled.div<CardProps>`\n  min-height: 40px;\n  height: 40px;\n  border-radius: 4px;\n  background: ${({isCardOpen}) => isCardOpen ? '#D309E1': 'white'};\n`;\n\nexport {\n    ExpandableContainer,\n    ExpandableHeader,\n    SubCard\n}\n","import styled from \"styled-components/macro\";\n\ninterface CardProps {\n    isCardOpen: boolean\n}\n\nconst SubCardContainer = styled.div<CardProps>`\n  min-height: 40px;\n  height: ${({isCardOpen}) => isCardOpen ? 'auto': '40px'};\n  box-sizing: border-box;\n  border-radius: 4px;\n  background: ${({isCardOpen}) => isCardOpen ? '#D309E1': 'white'};\n`;\n\nconst SubCardHeader = styled.p`\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 150%;\n  margin: 0;\n  padding: 8px;\n`;\n\nexport {\n    SubCardContainer,\n    SubCardHeader\n}\n","import styled from \"styled-components/macro\";\n\nconst randomHeight = () => {\n    const x = Math.floor(Math.random()*10) *10 + 55\n    console.log(x)\n    return x\n};\n\nconst ComponentContainer = styled.div`\n  box-sizing: border-box;\n  background: white;\n  border-top: 1px solid #DCDFE4;\n  min-height: 40px;\n  height: ${randomHeight()}px;\n`;\n\nconst ComponentContainerHeader = styled.p`\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 150%;\n  margin: 0;\n  padding: 8px;\n`;\n\nexport {\n    ComponentContainer,\n    ComponentContainerHeader\n}\n","import React, { useState } from 'react';\nimport { SubCardContainer, SubCardHeader } from './styles'\nimport { ComponentContainer } from \"../ComponentContainer/styles\";\n\ninterface SubCardComponentProps {\n    title: string\n}\n\nconst SubCardComponent = ({title} : SubCardComponentProps) => {\n    const [isSubCardOpen, setIsSubCardOpen] = useState(false)\n\n    const onSubCardClick = (e : React.MouseEvent<HTMLElement>) => {\n        e.stopPropagation();\n        setIsSubCardOpen(!isSubCardOpen)\n    };\n\n    return (\n        <SubCardContainer isCardOpen={isSubCardOpen} onClick={(e) => onSubCardClick(e)}>\n            <SubCardHeader>\n                {title}\n            </SubCardHeader>\n            {isSubCardOpen && <ComponentContainer title={'Some content'}/>}\n        </SubCardContainer>\n    );\n};\n\nexport default SubCardComponent;\n","import React, { useState } from 'react';\nimport { ExpandableHeader, ExpandableContainer } from './styles'\nimport SubCard from '../SubCard'\n\ninterface ExpandableComponentProps {\n    title: string,\n}\n\nconst ExpandableComponent = ({title} : ExpandableComponentProps) => {\n    const [isCardOpen, setIsCardOpen] = useState(false)\n    const [isSubCardOpen, setIsSubCardOpen] = useState(false)\n\n    const onSubCardClick = (e : React.MouseEvent<HTMLElement>) => {\n        e.stopPropagation();\n        setIsSubCardOpen(!isSubCardOpen)\n    };\n\n    return (\n        <ExpandableContainer isCardOpen={isCardOpen} onClick={() => setIsCardOpen(!isCardOpen)}>\n            <ExpandableHeader>\n                {title}\n            </ExpandableHeader>\n            {isCardOpen && <SubCard title={'SubCard Example'}/>}\n        </ExpandableContainer>\n    );\n};\n\nexport default ExpandableComponent;\n","import * as React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { motion, useMotionValue } from \"framer-motion\";\nimport { findIndex, Position } from \"./find-index\";\nimport move from \"array-move\";\nimport Expandable from './Card';\n\ninterface ItemProps {\n  color : string,\n  setPosition: any,\n  moveItem: any,\n  i: number\n}\n\nconst Item = ({ color, setPosition, moveItem, i } : ItemProps ) => {\n  const [isDragging, setDragging] = useState(false);\n\n  // We'll use a `ref` to access the DOM element that the `motion.li` produces.\n  // This will allow us to measure its height and position, which will be useful to\n  // decide when a dragging element should switch places with its siblings.\n  const ref = useRef<any>(null);\n\n  // By manually creating a reference to `dragOriginY` we can manipulate this value\n  // if the user is dragging this DOM element while the drag gesture is active to\n  // compensate for any movement as the items are re-positioned.\n  const dragOriginY = useMotionValue(0);\n\n  // Update the measured position of the item so we can calculate when we should rearrange.\n  useEffect(() => {\n    setPosition(i, {\n      height: ref.current.offsetHeight,\n      top: ref.current.offsetTop\n    });\n  });\n\n  return (\n    <motion.li\n      ref={ref}\n      initial={false}\n      // If we're dragging, we want to set the zIndex of that item to be on top of the other items.\n      animate={isDragging ? onTop : flat}\n      style={{ background: color, height: 'auto' }}\n      whileHover={{ boxShadow: `0px 1px 4px rgba(0, 0, 0, 0.2)` }}\n      // whileTap={{ scale: 1.12 }}\n      drag=\"y\"\n      dragOriginY={dragOriginY}\n      dragConstraints={{ top: 0, bottom: 0 }}\n      dragElastic={1}\n      onDragStart={() => setDragging(true)}\n      onDragEnd={() => setDragging(false)}\n      onDrag={(e, { point }) => moveItem(i, point.y)}\n      // onUpdate={({ y, top }) => {\n      //   !isDragging && dragOriginY.set((y || top) as number);\n      // }}\n      positionTransition={({ delta }) => {\n        if (isDragging) {\n          // If we're dragging, we want to \"undo\" the items movement within the list\n          // by manipulating its dragOriginY. This will keep the item under the cursor,\n          // even though it's jumping around the DOM.\n          dragOriginY.set(dragOriginY.get() + delta.y);\n        }\n\n        // If `positionTransition` is a function and returns `false`, it's telling\n        // Motion not to animate from its old position into its new one. If we're\n        // dragging, we don't want any animation to occur.\n        return !isDragging;\n      }}\n    >\n      <Expandable title={'hello'}/>\n    </motion.li>\n  );\n};\n\nexport const Example = () => {\n  const [colors, setColors] = useState(initialColors);\n\n  // We need to collect an array of height and position data for all of this component's\n  // `Item` children, so we can later us that in calculations to decide when a dragging\n  // `Item` should swap places with its siblings.\n  const positions = useRef<Position[]>([]).current;\n  const setPosition = (i: number, offset: Position) => (positions[i] = offset);\n\n  // Find the ideal index for a dragging item based on its position in the array, and its\n  // current drag offset. If it's different to its current index, we swap this item with that\n  // sibling.\n  const moveItem = (i: number, dragOffset: number) => {\n    const targetIndex = findIndex(i, dragOffset, positions);\n    if (targetIndex !== i) setColors(move(colors, i, targetIndex));\n  };\n\n  return (\n    <ul>\n      {colors.map((color, i) => (\n        <Item\n          key={color}\n          i={i}\n          color={color}\n          setPosition={setPosition}\n          moveItem={moveItem}\n        />\n      ))}\n    </ul>\n  );\n};\n\n// Spring configs\nconst onTop = { zIndex: 1 };\nconst flat = {\n  zIndex: 0,\n  transition: { delay: 0.3 }\n};\n\nconst initialColors = [\"#FF008C\", \"#D309E1\", \"#9C1AFF\"];\nconst heights:any = {\n  \"#FF008C\": 60,\n  \"#D309E1\": 80,\n  \"#9C1AFF\": 90,\n  \"#7700FF\": 100\n};\n","import { clamp, distance } from \"@popmotion/popcorn\";\n\nexport interface Position {\n  top: number;\n  height: number;\n}\n\n// Prevent rapid reverse swapping\nconst buffer = 5;\n\nexport const findIndex = (\n  i: number,\n  yOffset: number,\n  positions: Position[]\n) => {\n  let target = i;\n  const { top, height } = positions[i];\n  const bottom = top + height;\n\n  // If moving down\n  if (yOffset > 0) {\n    const nextItem = positions[i + 1];\n    if (nextItem === undefined) return i;\n\n    const swapOffset =\n      distance(bottom, nextItem.top + nextItem.height / 2) + buffer;\n    if (yOffset > swapOffset) target = i + 1;\n\n    // If moving up\n  } else if (yOffset < 0) {\n    const prevItem = positions[i - 1];\n    if (prevItem === undefined) return i;\n\n    const prevBottom = prevItem.top + prevItem.height;\n    const swapOffset = distance(top, prevBottom - prevItem.height / 2) + buffer;\n    if (yOffset < -swapOffset) target = i - 1;\n  }\n\n  return clamp(0, positions.length, target);\n};\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { Example } from \"./Example\";\n\nimport \"./styles.css\";\n\nconst App = () => <Example />;\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}