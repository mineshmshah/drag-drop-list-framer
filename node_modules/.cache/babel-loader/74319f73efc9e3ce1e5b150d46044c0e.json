{"ast":null,"code":"import _slicedToArray from \"/Users/mineshshah/minesh/framer-motion-drag-to-reorder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mineshshah/minesh/framer-motion-drag-to-reorder/src/Expandable/index.tsx\";\nimport React, { useState } from 'react';\nimport { ExpandableHeader, ExpandableContainer } from './styles';\n\nvar ExpandableComponent = function ExpandableComponent(_ref) {\n  var title = _ref.title;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCardOpen = _useState2[0],\n      setIsCardOpen = _useState2[1];\n\n  return React.createElement(ExpandableContainer, {\n    isCardOpen: isCardOpen,\n    onClick: function onClick() {\n      return setIsCardOpen(!isCardOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(ExpandableHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, title, \" \", JSON.stringify(isCardOpen)));\n};\n\nexport default ExpandableComponent;","map":{"version":3,"sources":["/Users/mineshshah/minesh/framer-motion-drag-to-reorder/src/Expandable/index.tsx"],"names":["React","useState","ExpandableHeader","ExpandableContainer","ExpandableComponent","title","isCardOpen","setIsCardOpen","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,UAAtD;;AAMA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAwC;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;;AAAA,kBAC5BJ,QAAQ,CAAC,KAAD,CADoB;AAAA;AAAA,MACzDK,UADyD;AAAA,MAC7CC,aAD6C;;AAGhE,SACI,oBAAC,mBAAD;AAAqB,IAAA,UAAU,EAAED,UAAjC;AAA6C,IAAA,OAAO,EAAE;AAAA,aAAMC,aAAa,CAAC,CAACD,UAAF,CAAnB;AAAA,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KADL,OACaG,IAAI,CAACC,SAAL,CAAeH,UAAf,CADb,CADJ,CADJ;AAOH,CAVD;;AAYA,eAAeF,mBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ExpandableHeader, ExpandableContainer } from './styles'\n\ninterface ExpandableComponentProps {\n    title: string\n}\n\nconst ExpandableComponent = ({title} : ExpandableComponentProps) => {\n    const [isCardOpen, setIsCardOpen] = useState(false)\n\n    return (\n        <ExpandableContainer isCardOpen={isCardOpen} onClick={() => setIsCardOpen(!isCardOpen)}>\n            <ExpandableHeader>\n                {title} {JSON.stringify(isCardOpen)}\n            </ExpandableHeader>\n        </ExpandableContainer>\n    );\n};\n\nexport default ExpandableComponent;\n"]},"metadata":{},"sourceType":"module"}