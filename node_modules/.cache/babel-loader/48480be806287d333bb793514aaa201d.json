{"ast":null,"code":"import _slicedToArray from \"/Users/mineshshah/minesh/framer-motion-drag-to-reorder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mineshshah/minesh/framer-motion-drag-to-reorder/src/Expandable/index.tsx\";\nimport React, { useState } from 'react';\nimport { ExpandableHeader, ExpandableContainer, SubCard } from './styles';\n\nvar ExpandableComponent = function ExpandableComponent(_ref) {\n  var title = _ref.title;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCardOpen = _useState2[0],\n      setIsCardOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isSubCardOpen = _useState4[0],\n      setIsSubCardOpen = _useState4[1];\n\n  return React.createElement(ExpandableContainer, {\n    isCardOpen: isCardOpen,\n    onClick: function onClick() {\n      return setIsCardOpen(!isCardOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(ExpandableHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, title), React.createElement(SubCard, {\n    isCardOpen: isSubCardOpen,\n    onClick: function onClick() {\n      return setIsSubCardOpen(!isCardOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n};\n\nexport default ExpandableComponent;","map":{"version":3,"sources":["/Users/mineshshah/minesh/framer-motion-drag-to-reorder/src/Expandable/index.tsx"],"names":["React","useState","ExpandableHeader","ExpandableContainer","SubCard","ExpandableComponent","title","isCardOpen","setIsCardOpen","isSubCardOpen","setIsSubCardOpen"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,OAAhD,QAA+D,UAA/D;;AAMA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAwC;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;;AAAA,kBAC5BL,QAAQ,CAAC,KAAD,CADoB;AAAA;AAAA,MACzDM,UADyD;AAAA,MAC7CC,aAD6C;;AAAA,mBAEtBP,QAAQ,CAAC,KAAD,CAFc;AAAA;AAAA,MAEzDQ,aAFyD;AAAA,MAE1CC,gBAF0C;;AAIhE,SACI,oBAAC,mBAAD;AAAqB,IAAA,UAAU,EAAEH,UAAjC;AAA6C,IAAA,OAAO,EAAE;AAAA,aAAMC,aAAa,CAAC,CAACD,UAAF,CAAnB;AAAA,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KADL,CADJ,EAII,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAEG,aAArB;AAAoC,IAAA,OAAO,EAAE;AAAA,aAAMC,gBAAgB,CAAC,CAACH,UAAF,CAAtB;AAAA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CAZD;;AAcA,eAAeF,mBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ExpandableHeader, ExpandableContainer, SubCard } from './styles'\n\ninterface ExpandableComponentProps {\n    title: string\n}\n\nconst ExpandableComponent = ({title} : ExpandableComponentProps) => {\n    const [isCardOpen, setIsCardOpen] = useState(false)\n    const [isSubCardOpen, setIsSubCardOpen] = useState(false)\n\n    return (\n        <ExpandableContainer isCardOpen={isCardOpen} onClick={() => setIsCardOpen(!isCardOpen)}>\n            <ExpandableHeader>\n                {title}\n            </ExpandableHeader>\n            <SubCard isCardOpen={isSubCardOpen} onClick={() => setIsSubCardOpen(!isCardOpen)}/>\n        </ExpandableContainer>\n    );\n};\n\nexport default ExpandableComponent;\n"]},"metadata":{},"sourceType":"module"}