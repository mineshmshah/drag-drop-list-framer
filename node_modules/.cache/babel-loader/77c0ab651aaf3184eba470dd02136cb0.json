{"ast":null,"code":"import _slicedToArray from \"/Users/mineshshah/minesh/drag-drop-list-framer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mineshshah/minesh/drag-drop-list-framer/src/SubCard/index.tsx\";\nimport React, { useState } from 'react';\nimport { SubCardContainer, SubCardHeader } from './styles';\nimport { ComponentContainer } from \"../ComponentContainer/styles\";\n\nvar SubCardComponent = function SubCardComponent(_ref) {\n  var title = _ref.title,\n      isDragging = _ref.isDragging;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSubCardOpen = _useState2[0],\n      setIsSubCardOpen = _useState2[1];\n\n  var onTap = function onTap(e) {\n    e.stopImmediatePropagation();\n    setIsSubCardOpen(!isSubCardOpen);\n  };\n\n  return React.createElement(SubCardContainer, {\n    isCardOpen: isSubCardOpen,\n    onTap: onTap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(SubCardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, title), isSubCardOpen && React.createElement(ComponentContainer, {\n    title: 'Some content',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nexport default SubCardComponent;","map":{"version":3,"sources":["/Users/mineshshah/minesh/drag-drop-list-framer/src/SubCard/index.tsx"],"names":["React","useState","SubCardContainer","SubCardHeader","ComponentContainer","SubCardComponent","title","isDragging","isSubCardOpen","setIsSubCardOpen","onTap","e","stopImmediatePropagation"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,UAAhD;AACA,SAASC,kBAAT,QAAmC,8BAAnC;;AAQA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAiD;AAAA,MAA/CC,KAA+C,QAA/CA,KAA+C;AAAA,MAAxCC,UAAwC,QAAxCA,UAAwC;;AAAA,kBAC5BN,QAAQ,CAAC,KAAD,CADoB;AAAA;AAAA,MAC/DO,aAD+D;AAAA,MAChDC,gBADgD;;AAEtE,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,CAAD,EAAe;AACzBA,IAAAA,CAAC,CAACC,wBAAF;AACAH,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACH,GAHD;;AAKA,SACI,oBAAC,gBAAD;AACI,IAAA,UAAU,EAAEA,aADhB;AAEI,IAAA,KAAK,EAAEE,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KADL,CAJJ,EAOKE,aAAa,IAAI,oBAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPtB,CADJ;AAWH,CAlBD;;AAoBA,eAAeH,gBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { SubCardContainer, SubCardHeader } from './styles'\nimport { ComponentContainer } from \"../ComponentContainer/styles\";\nimport {ExpandableContainer} from \"../Card/styles\";\n\ninterface SubCardComponentProps {\n    title: string,\n    isDragging: boolean\n}\n\nconst SubCardComponent = ({title, isDragging} : SubCardComponentProps) => {\n    const [isSubCardOpen, setIsSubCardOpen] = useState(false);\n    const onTap = (e : Event) => {\n        e.stopImmediatePropagation();\n        setIsSubCardOpen(!isSubCardOpen)\n    };\n\n    return (\n        <SubCardContainer\n            isCardOpen={isSubCardOpen}\n            onTap={onTap}\n        >\n            <SubCardHeader>\n                {title}\n            </SubCardHeader>\n            {isSubCardOpen && <ComponentContainer title={'Some content'}/>}\n        </SubCardContainer>\n    );\n};\n\nexport default SubCardComponent;\n"]},"metadata":{},"sourceType":"module"}