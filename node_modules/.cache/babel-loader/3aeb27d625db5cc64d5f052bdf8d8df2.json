{"ast":null,"code":"import _slicedToArray from \"/Users/mineshshah/minesh/drag-drop-list-framer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mineshshah/minesh/drag-drop-list-framer/src/Card/index.tsx\";\nimport React, { useState } from 'react';\nimport { ExpandableHeader, ExpandableContainer } from './styles';\nimport SubCard from '../SubCard';\n\nvar ExpandableComponent = function ExpandableComponent(_ref) {\n  var title = _ref.title,\n      isDragging = _ref.isDragging;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCardOpen = _useState2[0],\n      setIsCardOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasDragged = _useState4[0],\n      setHasDragged = _useState4[1];\n\n  var onPointerDown = function onPointerDown() {\n    return setHasDragged(false);\n  };\n\n  var _onPointerMove = function onPointerMove() {\n    if (isDragging) setHasDragged(true);\n  };\n\n  var _onPointerUp = function onPointerUp(e) {\n    if (!hasDragged) {\n      e.stopPropagation();\n      setIsCardOpen(!isCardOpen);\n    }\n  }; //\n  //  const onCardClick = (e : React.MouseEvent<HTMLElement> | React.TouchEvent<HTMLElement>) => {\n  //      console.log(isDragging)\n  //      if(true) {\n  //          e.stopPropagation();\n  //          setIsCardOpen(!isCardOpen)\n  //      }\n  // };\n\n\n  return React.createElement(ExpandableContainer, {\n    onPointerDown: onPointerDown,\n    onPointerMove: function onPointerMove() {\n      return _onPointerMove();\n    },\n    onPointerUp: function onPointerUp(e) {\n      return _onPointerUp(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(ExpandableHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, title), isCardOpen && React.createElement(SubCard, {\n    title: 'SubCard Example',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n};\n\nexport default ExpandableComponent;","map":{"version":3,"sources":["/Users/mineshshah/minesh/drag-drop-list-framer/src/Card/index.tsx"],"names":["React","useState","ExpandableHeader","ExpandableContainer","SubCard","ExpandableComponent","title","isDragging","isCardOpen","setIsCardOpen","hasDragged","setHasDragged","onPointerDown","onPointerMove","onPointerUp","e","stopPropagation"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,UAAtD;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAOA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAoD;AAAA,MAAlDC,KAAkD,QAAlDA,KAAkD;AAAA,MAA3CC,UAA2C,QAA3CA,UAA2C;;AAAA,kBACxCN,QAAQ,CAAC,KAAD,CADgC;AAAA;AAAA,MACrEO,UADqE;AAAA,MACzDC,aADyD;;AAAA,mBAExCR,QAAQ,CAAC,KAAD,CAFgC;AAAA;AAAA,MAErES,UAFqE;AAAA,MAEzDC,aAFyD;;AAI5E,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WAAMD,aAAa,CAAC,KAAD,CAAnB;AAAA,GAAtB;;AACA,MAAME,cAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAGN,UAAH,EAAeI,aAAa,CAAC,IAAD,CAAb;AAClB,GAFD;;AAGA,MAAMG,YAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAyC;AACzD,QAAG,CAACL,UAAJ,EAAgB;AACZK,MAAAA,CAAC,CAACC,eAAF;AACAP,MAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACH;AACJ,GALD,CAR4E,CAc5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACI,oBAAC,mBAAD;AAAqB,IAAA,aAAa,EAAEI,aAApC;AAAmD,IAAA,aAAa,EAAE;AAAA,aAAIC,cAAa,EAAjB;AAAA,KAAlE;AAAuF,IAAA,WAAW,EAAE,qBAAAE,CAAC;AAAA,aAAID,YAAW,CAACC,CAAD,CAAf;AAAA,KAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KADL,CADJ,EAIKE,UAAU,IAAI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJnB,CADJ;AAQH,CA/BD;;AAiCA,eAAeH,mBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ExpandableHeader, ExpandableContainer } from './styles'\nimport SubCard from '../SubCard'\n\ninterface ExpandableComponentProps {\n    title: string,\n    isDragging: boolean\n}\n\nconst ExpandableComponent = ({title, isDragging} : ExpandableComponentProps) => {\n    const [isCardOpen, setIsCardOpen] = useState(false);\n    const [hasDragged, setHasDragged] = useState(false)\n\n    const onPointerDown = () => setHasDragged(false);\n    const onPointerMove = () => {\n        if(isDragging) setHasDragged(true)\n    };\n    const onPointerUp = (e : React.PointerEvent<HTMLElement>) => {\n        if(!hasDragged) {\n            e.stopPropagation();\n            setIsCardOpen(!isCardOpen)\n        }\n    };\n    //\n    //  const onCardClick = (e : React.MouseEvent<HTMLElement> | React.TouchEvent<HTMLElement>) => {\n    //      console.log(isDragging)\n    //      if(true) {\n    //          e.stopPropagation();\n    //          setIsCardOpen(!isCardOpen)\n    //      }\n    // };\n\n    return (\n        <ExpandableContainer onPointerDown={onPointerDown} onPointerMove={()=>onPointerMove()} onPointerUp={e => onPointerUp(e)}>\n            <ExpandableHeader>\n                {title}\n            </ExpandableHeader>\n            {isCardOpen && <SubCard title={'SubCard Example'}/>}\n        </ExpandableContainer>\n    );\n};\n\nexport default ExpandableComponent;\n"]},"metadata":{},"sourceType":"module"}