{"ast":null,"code":"import _slicedToArray from \"/Users/mineshshah/minesh/drag-drop-list-framer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mineshshah/minesh/drag-drop-list-framer/src/SubCard/index.tsx\";\nimport React, { useState } from 'react';\nimport { SubCardContainer, SubCardHeader } from './styles';\nimport { ComponentContainer } from \"../ComponentContainer/styles\";\n\nvar SubCardComponent = function SubCardComponent(_ref) {\n  var title = _ref.title,\n      isDragging = _ref.isDragging;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSubCardOpen = _useState2[0],\n      setIsSubCardOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasDragged = _useState4[0],\n      setHasDragged = _useState4[1];\n\n  var onPointerDown = function onPointerDown(e) {\n    return setHasDragged(false);\n  };\n\n  var onPointerMove = function onPointerMove(e) {\n    if (isDragging) setHasDragged(true);\n  };\n\n  var onPointerUp = function onPointerUp(e) {\n    if (!hasDragged) {\n      e.stopPropagation();\n      setIsSubCardOpen(!isSubCardOpen);\n    }\n  }; // const onSubCardClick = (e : React.MouseEvent<HTMLElement> | React.TouchEvent<HTMLElement>) => {\n  //     e.stopPropagation();\n  //     setIsSubCardOpen(!isSubCardOpen)\n  // };\n\n\n  var onTap = function onTap(e) {\n    e.stopImmediatePropagation();\n    setIsSubCardOpen(!isSubCardOpen);\n  };\n\n  return React.createElement(SubCardContainer, {\n    isCardOpen: isSubCardOpen // onPointerUp={e => onPointerUp(e)}\n    // onTouchStart={onPointerDown}\n    // onTouchMove={onPointerMove}\n    // onTouchEnd={e => onPointerUp(e)}\n    // onPointerDown={onPointerDown}\n    // onPointerMove={onPointerMove}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(SubCardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, title), isSubCardOpen && React.createElement(ComponentContainer, {\n    title: 'Some content',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n};\n\nexport default SubCardComponent;","map":{"version":3,"sources":["/Users/mineshshah/minesh/drag-drop-list-framer/src/SubCard/index.tsx"],"names":["React","useState","SubCardContainer","SubCardHeader","ComponentContainer","SubCardComponent","title","isDragging","isSubCardOpen","setIsSubCardOpen","hasDragged","setHasDragged","onPointerDown","e","onPointerMove","onPointerUp","stopPropagation","onTap","stopImmediatePropagation"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,UAAhD;AACA,SAASC,kBAAT,QAAmC,8BAAnC;;AAQA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAiD;AAAA,MAA/CC,KAA+C,QAA/CA,KAA+C;AAAA,MAAxCC,UAAwC,QAAxCA,UAAwC;;AAAA,kBAC5BN,QAAQ,CAAC,KAAD,CADoB;AAAA;AAAA,MAC/DO,aAD+D;AAAA,MAChDC,gBADgD;;AAAA,mBAElCR,QAAQ,CAAC,KAAD,CAF0B;AAAA;AAAA,MAE/DS,UAF+D;AAAA,MAEnDC,aAFmD;;AAItE,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD;AAAA,WAAyEF,aAAa,CAAC,KAAD,CAAtF;AAAA,GAAtB;;AACA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACD,CAAD,EAAyE;AAC3F,QAAGN,UAAH,EAAeI,aAAa,CAAC,IAAD,CAAb;AAClB,GAFD;;AAGA,MAAMI,WAAW,GAAG,SAAdA,WAAc,CAACF,CAAD,EAAyE;AACzF,QAAG,CAACH,UAAJ,EAAgB;AACZG,MAAAA,CAAC,CAACG,eAAF;AACAP,MAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACH;AACJ,GALD,CARsE,CActE;AACA;AACA;AACA;;;AACA,MAAMS,KAAK,GAAG,SAARA,KAAQ,CAACJ,CAAD,EAAe;AACzBA,IAAAA,CAAC,CAACK,wBAAF;AACAT,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACH,GAHD;;AAKA,SACI,oBAAC,gBAAD;AACI,IAAA,UAAU,EAAEA,aADhB,CAEI;AACA;AACA;AACA;AACA;AACA;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KADL,CATJ,EAYKE,aAAa,IAAI,oBAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZtB,CADJ;AAgBH,CAvCD;;AAyCA,eAAeH,gBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { SubCardContainer, SubCardHeader } from './styles'\nimport { ComponentContainer } from \"../ComponentContainer/styles\";\nimport {ExpandableContainer} from \"../Card/styles\";\n\ninterface SubCardComponentProps {\n    title: string,\n    isDragging: boolean\n}\n\nconst SubCardComponent = ({title, isDragging} : SubCardComponentProps) => {\n    const [isSubCardOpen, setIsSubCardOpen] = useState(false);\n    const [hasDragged, setHasDragged] = useState(false)\n\n    const onPointerDown = (e : React.PointerEvent<HTMLElement> | React.TouchEvent<HTMLElement>) => setHasDragged(false);\n    const onPointerMove = (e : React.PointerEvent<HTMLElement> | React.TouchEvent<HTMLElement>) => {\n        if(isDragging) setHasDragged(true)\n    };\n    const onPointerUp = (e : React.PointerEvent<HTMLElement> | React.TouchEvent<HTMLElement>) => {\n        if(!hasDragged) {\n            e.stopPropagation();\n            setIsSubCardOpen(!isSubCardOpen)\n        }\n    };\n    // const onSubCardClick = (e : React.MouseEvent<HTMLElement> | React.TouchEvent<HTMLElement>) => {\n    //     e.stopPropagation();\n    //     setIsSubCardOpen(!isSubCardOpen)\n    // };\n    const onTap = (e : Event) => {\n        e.stopImmediatePropagation();\n        setIsSubCardOpen(!isSubCardOpen)\n    };\n\n    return (\n        <SubCardContainer\n            isCardOpen={isSubCardOpen}\n            // onPointerUp={e => onPointerUp(e)}\n            // onTouchStart={onPointerDown}\n            // onTouchMove={onPointerMove}\n            // onTouchEnd={e => onPointerUp(e)}\n            // onPointerDown={onPointerDown}\n            // onPointerMove={onPointerMove}\n        >\n            <SubCardHeader>\n                {title}\n            </SubCardHeader>\n            {isSubCardOpen && <ComponentContainer title={'Some content'}/>}\n        </SubCardContainer>\n    );\n};\n\nexport default SubCardComponent;\n"]},"metadata":{},"sourceType":"module"}